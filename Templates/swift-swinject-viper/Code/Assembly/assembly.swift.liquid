//
//  {{ prefix }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Swinject
import SwinjectStoryboard

class {{ prefix }}{{ module_info.name }}Assembly {
}

// MARK: - Assembly
extension {{ prefix }}{{ module_info.name }}Assembly: Assembly {
  func assemble(container: Container) {
    container.register({{ prefix }}{{ module_info.name }}Interactor.self) { (r, presenter: {{ prefix }}{{ module_info.name }}Presenter) in
      let interactor = {{ prefix }}{{ module_info.name }}Interactor()
      interactor.output = presenter
      return interactor
    }

    container.register({{ prefix }}{{ module_info.name }}Router.self) { (r, viewController: {{ prefix }}{{ module_info.name }}ViewController) in
      let router = {{ prefix }}{{ module_info.name }}Router()
      router.transitionHandler = viewController
      return router
    }

    container.register({{ prefix }}{{ module_info.name }}Presenter.self) { (r, viewController: {{ prefix }}{{ module_info.name }}ViewController) in
      let presenter = {{ prefix }}{{ module_info.name }}Presenter()
      presenter.view = viewController
      presenter.interactor = r.resolve({{ module_info.name }}Interactor.self, argument: presenter)
      presenter.router = r.resolve({{ module_info.name }}Router.self, argument: viewController)
      return presenter
    }

    container.storyboardInitCompleted({{ prefix }}{{ module_info.name }}ViewController.self) { (r, viewController) in
      viewController.output = r.resolve({{ prefix }}{{ module_info.name }}Presenter.self, argument: viewController)
    }
  }

}
